# Nombre lógico de la app (aparece en logs/metrics)
spring.application.name=parcial2-iot
# Puerto HTTP
server.port=8080

# -------------------- DataSource (PostgreSQL) --------------------
spring.datasource.url=jdbc:postgresql://aws-1-us-east-2.pooler.supabase.com:5432/postgres?sslmode=require&ApplicationName=${spring.application.name}
spring.datasource.username=postgres.kgqbqqbqcgmzbrqxiabp
spring.datasource.password=bleon133Unab

# Pool Hikari ? valores conservadores (planes con límite de conexiones)
# Máximo de conexiones simultáneas en el pool
spring.datasource.hikari.maximum-pool-size=5
# Conexiones ociosas mínimas
spring.datasource.hikari.minimum-idle=1
# 20s para obtener una conexión del pool antes de fallar
spring.datasource.hikari.connection-timeout=20000
# 5 min; cierra conexiones ociosas
spring.datasource.hikari.idle-timeout=300000
# 27 min; menor que el timeout del servidor/PGbouncer para evitar "conexiones zombis"
spring.datasource.hikari.max-lifetime=1800000

# -------------------- JPA / Hibernate --------------------
# NO crea ni altera tablas; solo valida (Flyway gestiona cambios)
spring.jpa.hibernate.ddl-auto=validate
# Cierra EntityManager al salir de la capa web; evita Lazy fuera de transacción
spring.jpa.open-in-view=false
# Fuerza UTC en JDBC (timestamps coherentes)
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Esquema por defecto (evita poner schema en cada @Table)
spring.jpa.properties.hibernate.default_schema=iot

# Verbosidad SQL (útil al depurar). En producción déjalo en false para menos ruido.
# Cambia a true si necesitas ver SQL en logs
spring.jpa.show-sql=false
# Cambia a true si quieres SQL formateado (solo en depuración)
spring.jpa.properties.hibernate.format_sql=false

# -------------------- Flyway (migraciones) --------------------
# Activa Flyway
spring.flyway.enabled=true
# Carpeta con scripts V1__..., V2__...
spring.flyway.locations=classpath:db/migration
# Versiona el esquema iot (crea flyway_schema_history ahí)
spring.flyway.schemas=iot
# ÚTIL SOLO AL ADOPTAR FLYWAY en esquema ya existente;
spring.flyway.baseline-on-migrate=true
# tras la primera ejecución, cámbialo a false para detectar desalineaciones

# -------------------- Actuator / Métricas --------------------
# Endpoints expuestos
management.endpoints.web.exposure.include=health,info,metrics,prometheus
# Detalles /health solo autenticado
management.endpoint.health.show-details=when_authorized
# Tag "application" en todas las métricas
management.metrics.tags.application=${spring.application.name}